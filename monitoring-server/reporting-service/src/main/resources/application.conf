serviceId = "reporting"
port = ":8087"
reportingQueue = "reporting-queue"

equipmentUrl = "equipment:8083"
monitoringUrl = "monitoring:8085"

postgres = {
  url = "jdbc:postgresql://postgres:5432/reporting"
  user = "postgres"
  password = "123"
  driver = org.postgresql.Driver
}

serviceCredentials = [
  {
    login = "gateway"
    password = "gateway"
  }
]

op-rabbit {
  topic-exchange-name = "amq.topic"
  channel-dispatcher = "op-rabbit.default-channel-dispatcher"
  default-channel-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher

    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2

      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0

      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 4
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 100
  }
  connection {
    virtual-host = "/"
    hosts = ["rabbitmq"]
    username = "guest"
    password = "guest"
    port = 5672
    ssl = false
    connection-timeout = 3s
  }
}